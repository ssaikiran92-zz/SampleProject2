//created on: Jul 7, 2017
package rules

import com.PortInformation.*;
import java.util.ArrayList;


rule "service"

    when
        PortInfo:PortInformation(serviceValue==null)
    then
        PortInfo.setServiceValue("Frame/Native IP");
        PortInfo.setServiceIsUpdatable(true);
        PortInfo.setServiceIsRequired(true);
end

rule "serviceArea"
ruleflow-group "commonrules"
    when
        PortInfo:PortInformation(serviceAreaValue==null)
    then
        PortInfo.setServiceAreaValue("National");
        PortInfo.setServiceAreaIsUpdatable(true);
        PortInfo.setServiceAreaIsRequired(true);
end


rule "Ethernet1"
ruleflow-group "commonrules"
activation-group "Ethernet"
    when
        PortInfo:PortInformation( serviceValue == "Ethernet")
    then
        PortInfo.setEthernetValue(true);
        PortInfo.setEthernetIsUpdatable(true);
        PortInfo.setEthernetIsRequired(true);
        PortInfo.setEthernetIsDisplayed(true);
end

rule "Ethernet2"
ruleflow-group "commonrules"
activation-group "Ethernet"
    when
        PortInfo:PortInformation( serviceValue != "Ethernet")
    then
        PortInfo.setEthernetValue(null);
        PortInfo.setEthernetIsUpdatable(false);
        PortInfo.setEthernetIsRequired(false);
        PortInfo.setEthernetIsDisplayed(false);
end

rule "ServiceActivity1"
ruleflow-group "commonrules"
activation-group "ServiceActivity"
    when
        PortInfo:PortInformation(serviceValue == "Ethernet" && ethernetValue == true)
    then
    ArrayList List = new ArrayList();
		List.add("AVPN");
		List.add("OPTEWAN");
        PortInfo.setServiceActivityDropdownList(List);
        PortInfo.setServiceActivityIsUpdatable(true);
        PortInfo.setServiceActivityIsRequired(true);
        PortInfo.setServiceActivityIsDisplayed(true);
end

rule "ServiceActivity2"
ruleflow-group "commonrules"
activation-group "ServiceActivity"
    when
        PortInfo:PortInformation(serviceValue != "Ethernet")
    then
    
        PortInfo.setServiceActivityDropdownList(null);
        PortInfo.setServiceActivityIsUpdatable(false);
        PortInfo.setServiceActivityIsRequired(false);
        PortInfo.setServiceActivityIsDisplayed(false);
end


rule "AVPNManagementOption1"
ruleflow-group "commonrules"
activation-group "AVPNManagementOption"
    when
        PortInfo:PortInformation( serviceActivitySelectedValue == "AVPN")
    then
    ArrayList List = new ArrayList();
		List.add("Transport Only");
		List.add("Managed CSU");
		List.add("Managed Router");
        PortInfo.setAvpnManagementDropdownList(List);
        PortInfo.setAvpnManagementIsUpdatable(true);
        PortInfo.setAvpnManagementIsRequired(true);
        PortInfo.setAvpnManagementIsDisplayed(true);
end
rule "AVPNManagementOption2"
ruleflow-group "commonrules"
activation-group "AVPNManagementOption"
    when
        PortInfo:PortInformation( serviceActivitySelectedValue == null)
    then
    
        PortInfo.setAvpnManagementDropdownList(null);
        PortInfo.setAvpnManagementIsUpdatable(false);
        PortInfo.setAvpnManagementIsRequired(false);
        PortInfo.setAvpnManagementIsDisplayed(false);
end


rule "NativeIP1"
ruleflow-group "commonrules"
activation-group "NativeIP"
    when
        PortInfo:PortInformation(serviceValue =="Ethernet" && ethernetValue==true && serviceAreaValue=="National" && nativeIpValue==null)
    then
        PortInfo.setNativeIpValue("Not a Pos Port");
        PortInfo.setNativeIpIsUpdatable(false);
        PortInfo.setNativeIPIsRequired(false);
end

rule "NativeIP2"
ruleflow-group "commonrules"
activation-group "NativeIP"
    when
        PortInfo:PortInformation(nativeIpValue==null)
    then
        PortInfo.setNativeIpValue(null);
        PortInfo.setNativeIpIsUpdatable(false);
        PortInfo.setNativeIPIsRequired(false);
end


rule "Service Name1"
ruleflow-group "commonrules"
activation-group "ServiceName"
when
	PortInfo:PortInformation(serviceValue =="Ethernet" && ethernetValue==true && serviceAreaValue=="National" && serviceActivitySelectedValue=="AVPN" && serviceNameValue == null)
	then 
		PortInfo.setServiceNameValue("NB-IPVPN");
		PortInfo.setServiceNameisUpdatable(false);
		PortInfo.setServiceNameisRequired(false);
end
rule "Service Name2"
ruleflow-group "commonrules"
activation-group "ServiceName"
when
	PortInfo:PortInformation(serviceNameValue == null)
	then 
		PortInfo.setServiceNameValue(null);
		PortInfo.setServiceNameisUpdatable(false);
		PortInfo.setServiceNameisRequired(false);
end

rule "Service Name3"
ruleflow-group "commonrules-optewan"
activation-group "ServiceName"
when
	PortInfo:PortInformation(serviceValue =="Ethernet" && ethernetValue==true && serviceAreaValue=="National" && serviceActivitySelectedValue=="AVPN" && serviceNameValue == null)
	then 
		PortInfo.setServiceNameValue("OPTEWAN");
		PortInfo.setServiceNameisUpdatable(false);
		PortInfo.setServiceNameisRequired(false);
end

rule "Service Name4"
ruleflow-group "commonrules-optewan"
activation-group "ServiceName"
when
	PortInfo:PortInformation(serviceNameValue == null)
	then 
		PortInfo.setServiceNameValue(null);
		PortInfo.setServiceNameisUpdatable(false);
		PortInfo.setServiceNameisRequired(false);
end

rule "PortAction"
ruleflow-group "commonrules"
when 
	PortInfo:PortInformation(actionDropdownList==null)
	then
		ArrayList List = new ArrayList();
		List.add("New");
		List.add("Change Speed");
		PortInfo.setActionDropdownList(List);	
		PortInfo.setActionIsRequired(true);
		end

rule "PortSpeed"
ruleflow-group "commonrules"
when 
	PortInfo:PortInformation(portSpeedDropdownList==null)
	then
		ArrayList List = new ArrayList();
		List.add("200M");
		List.add("1 Gig");
		PortInfo.setPortSpeedDropdownList(List);	
		PortInfo.setPortSpeedIsRequired(true);
		PortInfo.setPortSpeedIsUpdatable(true);
		end

rule "PortBillingOptionEnable"
ruleflow-group "commonrules"
activation-group "PortBillingOption"
when
	PortInfo:PortInformation(portSpeedIsSelected == true || portBillingOptionSelectedValue == null)
	
	then
		ArrayList List = new ArrayList();
		List.add("None (Fixed Rate)");
		List.add("Highcap Flex");
		PortInfo.setPortBillingOptionDropdownList(List);	
		PortInfo.setPortBillingOptionIsUpdatable(true);
		PortInfo.setPortBillingOptionIsDisplayed(true);
		end
	
rule "PortBillingOptionDisable"
ruleflow-group "commonrules"
activation-group "PortBillingOption"
when
	PortInfo:PortInformation(portSpeedIsSelected == false || portSpeedIsSelected == null && portBillingOptionSelectedValue != null)
	
	then
		PortInfo.setPortBillingOptionDropdownList(null);	
		PortInfo.setPortBillingOptionIsDisplayed(false);
		end
		
		
rule "AccessMethodType"
ruleflow-group "commonrules"
when 
	PortInfo:PortInformation(accessMethodTypeDropdownList==null)
then
	ArrayList List = new ArrayList();
		List.add("ESP Ethernet Dedicated");
		List.add("ESP Ethernet Shared");
		PortInfo.setAccessMethodTypeDropdownList(List);
		PortInfo.setAccessMethodTypeIsUpdatable(true);
		
end

rule "InterconnectType1"
ruleflow-group "commonrules"
activation-group "InterconnectType"
when
PortInfo:PortInformation(accessMethodTypeSelectedValue=="ESP Ethernet Dedicated")

then
ArrayList List = new ArrayList();
		List.add("Provider GW Interconnect");
		PortInfo.setInterconnectTypeDropdownList(List);
		PortInfo.setInterconnectTypeIsUpdatable(true);
end

rule "InterconnectType2"
ruleflow-group "commonrules"
activation-group "InterconnectType"
when
PortInfo:PortInformation(accessMethodTypeSelectedValue=="ESP Ethernet Shared")

then
ArrayList List = new ArrayList();
		List.add("Direct Connect");
		PortInfo.setInterconnectTypeDropdownList(List);
		PortInfo.setInterconnectTypeIsUpdatable(true);
end

rule "InterconnectType3"
ruleflow-group "commonrules"
activation-group "InterconnectType"
when
PortInfo:PortInformation(accessMethodTypeSelectedValue==null)

then
		PortInfo.setInterconnectTypeDropdownList(null);
		PortInfo.setInterconnectTypeIsUpdatable(true);
end
